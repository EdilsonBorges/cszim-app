<div class="columns" data-turbolinks="false">
  <div class="column is-2">
    <table class="table is-bordered is-narrow">
    <tbody>
      <tr><td>Jogador</td></tr>
      <tr><td>Kills</td></tr>
      <tr><td>Deaths</td></tr>
      <tr><td>Assists</td></tr>
      <tr><td>Ratio</td></tr>
      <tr><td>Dano Causado</td></tr>
      <tr><td>Suic√≠dios</td></tr>
      <tr><td>Team Kills</td></tr>
      <tr><td>Disparos</td></tr>
      <tr><td>Mira(%)</td></tr>
      <tr><td>Kills por headshot</td></tr>
      <tr><td>Kills por headshot (%)</td></tr>
      <tr><td>C4 plantadas</td></tr>
      <tr><td>C4 explodidas</td></tr>
      <tr><td>C4 defusadas</td></tr>
      <tr><td><%= image_tag(asset_path("cssweapons/300px-Css_ak47.png"), class: 'image anti-image-block is-16x16') %> AK 47</td></tr>
      <tr><td><%= image_tag(asset_path("cssweapons/300px-Css_m4a1.png"), class: 'image anti-image-block is-16x16') %> M4</td></tr>
      <tr><td><%= image_tag(asset_path("cssweapons/300px-Css_aug.png"), class: 'image anti-image-block is-16x16') %> AUG</td></tr>
      <tr><td><%= image_tag(asset_path("cssweapons/300px-Css_ssg08.png"), class: 'image anti-image-block is-16x16') %> SSG</td></tr>
      <tr><td><%= image_tag(asset_path("cssweapons/300px-Css_awp.png"), class: 'image anti-image-block is-16x16') %> AWP</td></tr>
      <tr><td>
        <%= image_tag(asset_path("cssweapons/300px-Css_sg-550.png"), class: 'image anti-image-block is-16x16') %>
        <%= image_tag(asset_path("cssweapons/300px-Css_sg-1.png"), class: 'image anti-image-block is-16x16') %>
        TECOS
      </td></tr>
      <tr><td><%= image_tag(asset_path("cssweapons/300px-Css_famas.png"), class: 'image anti-image-block is-16x16') %> FAMAS</td></tr>
      <tr><td><%= image_tag(asset_path("cssweapons/300px-Css_galil.png"), class: 'image anti-image-block is-16x16') %> GALIL</td></tr>
      <tr><td><%= image_tag(asset_path("cssweapons/300px-Css_knives.png"), class: 'image anti-image-block is-16x16') %> FACA</td></tr>
      <tr><td><%= image_tag(asset_path("cssweapons/300px-Css_taser.png"), class: 'image anti-image-block is-16x16') %> TASER</td></tr>
      <tr><td>
        <%= image_tag(asset_path("cssweapons/300px-Css_usp.png"), class: 'image anti-image-block is-16x16') %>
        <%= image_tag(asset_path("cssweapons/300px-Css_glock16.png"), class: 'image anti-image-block is-16x16') %>
        USP + GLOCK
      </td></tr>
      <tr><td>
        <%= image_tag(asset_path("cssweapons/300px-Css_beretta.png"), class: 'image anti-image-block is-16x16') %>
        <%= image_tag(asset_path("cssweapons/300px-Css_es57.png"), class: 'image anti-image-block is-16x16') %>
        OUTRAS PISTOLAS
      </td></tr>
      <tr><td><%= image_tag(asset_path("cssweapons/300px-Css_deagle.png"), class: 'image anti-image-block is-16x16') %> DEAGLE</td></tr>
      <tr><td>
        <%= image_tag(asset_path("cssweapons/300px-Css_p90.png"), class: 'image anti-image-block is-16x16') %>
        <%= image_tag(asset_path("cssweapons/300px-Css_ump.png"), class: 'image anti-image-block is-16x16') %>
        SUBMACHINES
      </td></tr>
      <tr><td>
        <%= image_tag(asset_path("cssweapons/300px-Css_m3.png"), class: 'image anti-image-block is-16x16') %>
        <%= image_tag(asset_path("cssweapons/300px-Css_xm1014.png"), class: 'image anti-image-block is-16x16') %>
        SHOTGUNS
      </td></tr>
      <tr><td>
        <%= image_tag(asset_path("cssweapons/300px-Css_hegrenade.jpg"), class: 'image anti-image-block is-16x16') %>
        HE GRENADE
      </td></tr>
      <tr><td>
        <%= image_tag(asset_path("cssweapons/300px-Css_molotov.jpg"), class: 'image anti-image-block is-16x16') %>
        MOLOTOV
      </td></tr>
    </tbody>
  </table>
  </div>
  <% User.where(id: params[:players]).each do |user| %>
    <% rank = @ranks.select{ |e| e[:nome] == user.nome } %>
    <% unless rank.empty? %>
      <div class="column is-1">
        <table class="table is-bordered is-narrow">
        <tbody>
            <tr><td><%= user.nome %></td></tr>
            <% kills = rank.sum{ |e| e[:kills] } %>
            <tr><td data-kills="<%= kills.round(1) %>" class="colored"><%= kills %></td></tr>
            <% deaths = rank.sum{ |e| e[:deaths] } %>
            <tr><td data-deaths="<%= deaths.round(1) %>" class="colored"><%= deaths %></td></tr>
            <% assists = rank.sum{ |e| e[:assists].to_i } %>
            <tr><td data-assists="<%= assists.round(1) %>" class="colored"><%= assists %></td></tr>
            <% ratio = (kills.to_f/deaths.to_f).round(2) %>
            <tr><td data-ratio="<%= format_float(ratio) %>" class="colored"><%= ratio %></td></tr>
            <% damage = rank.sum{ |e| e[:damage].to_i } %>
            <tr><td data-damage="<%= damage.round(1) %>" class="colored"><%=  number_with_delimiter(damage, delimiter: ".") %></td></tr>
            <% suicides = rank.sum{ |e| e[:suicides] } %>
            <tr><td data-suicides="<%= suicides.round(1) %>" class="colored"><%= suicides %></td></tr>
            <% tk = rank.sum{ |e| e[:tk] } %>
            <tr><td data-tk="<%= tk.round(1) %>" class="colored"><%= tk %></td></tr>
            <% shots = rank.sum{ |e| e[:shots] } %>
            <tr><td data-shots="<%= shots.round(1) %>" class="colored"><%= shots %></td></tr>
            <% hits = rank.sum{ |e| e[:hits] } %>
            <% mira = ((hits.to_f/shots.to_f)*100).round(1) %>
            <tr><td data-mira="<%= mira.round(1) %>" class="colored"><%= mira %>%</td></tr>
            <% nuheadshots = rank.sum{ |e| e[:headshots] } %>
            <tr><td data-nuheadshots="<%= nuheadshots.round(1) %>" class="colored"><%= nuheadshots %></td></tr>
            <% headshots = ((nuheadshots.to_f/kills.to_f)*100).round(1) %>
            <tr><td data-headshots="<%= headshots.round(1) %>" class="colored"><%= headshots %>%</td></tr>
            <% c4_planted = rank.sum{ |e| e[:c4_planted] } %>
            <tr><td data-c4planted="<%= c4_planted.round(1) %>" class="colored"><%= c4_planted %></td></tr>
            <% c4_exploded = rank.sum{ |e| e[:c4_exploded] } %>
            <tr><td data-c4exploded="<%= c4_exploded.round(1) %>" class="colored"><%= c4_exploded %></td></tr>
            <% c4_defused = rank.sum{ |e| e[:c4_defused] } %>
            <tr><td data-c4defused="<%= c4_defused.round(1) %>" class="colored"><%= c4_defused %></td></tr>
            <% ak47 = rank.sum{ |e| e[:ak47] } %>
            <tr class="armas"><td data-ak47="<%= ak47.round(1) %>" class="colored"><%= ak47 %></td></tr>
            <% m4a1 = rank.sum{ |e| e[:m4a1].to_i + e[:m4a1_silencer].to_i } %>
            <tr class="armas"><td data-m4a1="<%= m4a1.round(1) %>" class="colored"><%= m4a1 %></td></tr>
            <% aug = rank.sum{ |e| e[:aug].to_i + e[:aug_silencer].to_i } %>
            <tr class="armas"><td data-aug="<%= aug.round(1) %>" class="colored"><%= aug %></td></tr>
            <% ssg08 = rank.sum{ |e| e[:ssg08].to_i + e[:ssg08_silencer].to_i } %>
            <tr class="armas"><td data-ssg08="<%= ssg08.round(1) %>" class="colored"><%= ssg08 %></td></tr>
            <% awp = rank.sum{ |e| e[:awp] } %>
            <tr class="armas"><td data-awp="<%= awp.round(1) %>" class="colored"><%= awp %></td></tr>
            <% tecos = rank.sum{ |e| e[:scar20].to_i + e[:g3sg1].to_i + e[:sg550].to_i } %>
            <tr class="armas"><td data-tecos="<%= tecos.round(1) %>" class="colored"><%= tecos %></td></tr>
            <% famas = rank.sum{ |e| e[:famas] } %>
            <tr class="armas"><td data-famas="<%= famas.round(1) %>" class="colored"><%= famas %></td></tr>
            <% galil = rank.sum{ |e| e[:galilar].to_i + e[:galil].to_i } %>
            <tr class="armas"><td data-galil="<%= galil.round(1) %>" class="colored"><%= galil %></td></tr>
            <% knife = rank.sum{ |e| e[:knife] } %>
            <tr class="armas"><td data-knife="<%= knife.round(1) %>" class="colored"><%= knife %></td></tr>
            <% taser = rank.sum{ |e| e[:taser].to_i } %>
            <tr class="armas"><td data-taser="<%= taser.round(1) %>" class="colored"><%= taser %></td></tr>
            <% pistolas = rank.sum{ |e| e[:hkp2000].to_i + e[:usp_silencer].to_i + e[:glock].to_i + + e[:usp].to_i } %>
            <tr class="armas"><td data-pistolas="<%= pistolas.round(1) %>" class="colored"><%= pistolas %></td></tr>
            <% outraspistolas = rank.sum{ |e| e[:fiveseven].to_i + e[:p250].to_i + e[:tec9].to_i + + e[:cz75a].to_i + e[:p228].to_i + e[:elite].to_i } %>
            <tr class="armas"><td data-outraspistolas="<%= outraspistolas.round(1) %>" class="colored"><%= outraspistolas %></td></tr>
            <% deagle = rank.sum{ |e| e[:deagle] } %>
            <tr class="armas"><td data-deagle="<%= deagle.round(1) %>" class="colored"><%= deagle %></td></tr>
            <% submachineguns = rank.sum{ |e| e[:p90].to_i + e[:mac10].to_i + e[:ump45].to_i + + e[:mp9].to_i + e[:mp7].to_i + e[:bizon].to_i + e[:mp5navy].to_i + e[:tmp].to_i } %>
            <tr class="armas"><td data-submachineguns="<%= submachineguns.round(1) %>" class="colored"><%= submachineguns %></td></tr>
            <% shotguns = rank.sum{ |e| e[:nova].to_i + e[:xm1014].to_i + e[:mag7].to_i + + e[:m3].to_i } %>
            <tr class="armas"><td data-shotguns="<%= shotguns.round(1) %>" class="colored"><%= shotguns %></td></tr>
            <% hegrenade = rank.sum{ |e| e[:hegrenade].to_i } %>
            <tr class="armas"><td data-hegrenade="<%= hegrenade.round(1) %>" class="colored"><%= hegrenade %></td></tr>
            <% inferno = rank.sum{ |e| e[:inferno].to_i } %>
            <tr class="armas"><td data-inferno="<%= inferno.round(1) %>" class="colored"><%= inferno %></td></tr>
          </tbody>
        </table>
      </div>
    <% end %>
  <% end %>
</div>

<style type="text/css">
  .colored { color: red }
  .armas { height: 28px }
</style>

<script type="text/javascript">
  $(function() {
    var killsElements = document.querySelectorAll("[data-kills]");
    if (killsElements.length > 0) {
      var kills = $.map(killsElements, function(val, i) { return parseFloat(val.dataset.kills).toFixed(1); });
      var maxKills = Math.max.apply(Math, kills).toFixed(1);
      var killsList = document.querySelectorAll("[data-kills='"+maxKills+"']");
      for (var i = 0; i < killsList.length; i++) {
        killsList[i].style.color = "green";
      }

      var deathsElements = document.querySelectorAll("[data-deaths]");
      var deaths = $.map(deathsElements, function(val, i) { return parseFloat(val.dataset.deaths).toFixed(1); });
      var minDeaths = Math.min.apply(Math, deaths).toFixed(1);
      var deathsList = document.querySelectorAll("[data-deaths='"+minDeaths+"']");
      for (var i = 0; i < deathsList.length; i++) {
        deathsList[i].style.color = "green";
      }

      var assistsElements = document.querySelectorAll("[data-assists]");
      var assists = $.map(assistsElements, function(val, i) { return parseFloat(val.dataset.assists).toFixed(1); });
      var maxAssists = Math.max.apply(Math, assists).toFixed(1);
      var assistsList = document.querySelectorAll("[data-assists='"+maxAssists+"']");
      for (var i = 0; i < assistsList.length; i++) {
        assistsList[i].style.color = "green";
      }

      var ratioElements = document.querySelectorAll("[data-ratio]");
      var ratio = $.map(ratioElements, function(val, i) { return parseFloat(val.dataset.ratio).toFixed(2); });
      var maxRatio = Math.max.apply(Math, ratio).toFixed(2);
      var ratioList = document.querySelectorAll("[data-ratio='"+maxRatio+"']");
      for (var i = 0; i < ratioList.length; i++) {
        ratioList[i].style.color = "green";
      }

      var damageElements = document.querySelectorAll("[data-damage]");
      var damage = $.map(damageElements, function(val, i) { return parseFloat(val.dataset.damage).toFixed(1); });
      var maxDamage = Math.max.apply(Math, damage).toFixed(1);
      var damageList = document.querySelectorAll("[data-damage='"+maxDamage+"']");
      for (var i = 0; i < damageList.length; i++) {
        damageList[i].style.color = "green";
      }

      var suicidesElements = document.querySelectorAll("[data-suicides]");
      var suicides = $.map(suicidesElements, function(val, i) { return parseFloat(val.dataset.suicides).toFixed(1); });
      var minSuicides = Math.min.apply(Math, suicides).toFixed(1);
      var suicidesList = document.querySelectorAll("[data-suicides='"+minSuicides+"']");
      for (var i = 0; i < suicidesList.length; i++) {
        suicidesList[i].style.color = "green";
      }

      var tkElements = document.querySelectorAll("[data-tk]");
      var tk = $.map(tkElements, function(val, i) { return parseFloat(val.dataset.tk).toFixed(1); });
      var minTk = Math.min.apply(Math, tk).toFixed(1);
      var tkList = document.querySelectorAll("[data-tk='"+minTk+"']");
      for (var i = 0; i < tkList.length; i++) {
        tkList[i].style.color = "green";
      }

      var shotsElements = document.querySelectorAll("[data-shots]");
      var shots = $.map(shotsElements, function(val, i) { return parseFloat(val.dataset.shots).toFixed(1); });
      var maxShots = Math.max.apply(Math, shots).toFixed(1);
      var shotsList = document.querySelectorAll("[data-shots='"+maxShots+"']");
      for (var i = 0; i < shotsList.length; i++) {
        shotsList[i].style.color = "green";
      }

      var miraElements = document.querySelectorAll("[data-mira]");
      var mira = $.map(miraElements, function(val, i) { return parseFloat(val.dataset.mira).toFixed(1); });
      var maxMira = Math.max.apply(Math, mira).toFixed(1);
      var miraList = document.querySelectorAll("[data-mira='"+maxMira+"']");
      for (var i = 0; i < miraList.length; i++) {
        miraList[i].style.color = "green";
      }

      var headshotsElements = document.querySelectorAll("[data-headshots]");
      var headshots = $.map(headshotsElements, function(val, i) { return parseFloat(val.dataset.headshots).toFixed(1); });
      var maxHeadshots = Math.max.apply(Math, headshots).toFixed(1);
      var headshotsList = document.querySelectorAll("[data-headshots='"+maxHeadshots+"']");
      for (var i = 0; i < headshotsList.length; i++) {
        headshotsList[i].style.color = "green";
      }

      var nuheadshotsElements = document.querySelectorAll("[data-nuheadshots]");
      var nuheadshots = $.map(nuheadshotsElements, function(val, i) { return parseFloat(val.dataset.nuheadshots).toFixed(1); });
      var maxNuheadshots = Math.max.apply(Math, nuheadshots).toFixed(1);
      var nuheadshotsList = document.querySelectorAll("[data-nuheadshots='"+maxNuheadshots+"']");
      for (var i = 0; i < nuheadshotsList.length; i++) {
        nuheadshotsList[i].style.color = "green";
      }

      var c4plantedElements = document.querySelectorAll("[data-c4planted]");
      var c4planted = $.map(c4plantedElements, function(val, i) { return parseFloat(val.dataset.c4planted).toFixed(1); });
      var maxC4planted = Math.max.apply(Math, c4planted).toFixed(1);
      var c4plantedList = document.querySelectorAll("[data-c4planted='"+maxC4planted+"']");
      for (var i = 0; i < c4plantedList.length; i++) {
        c4plantedList[i].style.color = "green";
      }

      var c4explodedElements = document.querySelectorAll("[data-c4exploded]");
      var c4exploded = $.map(c4explodedElements, function(val, i) { return parseFloat(val.dataset.c4exploded).toFixed(1); });
      var maxC4exploded = Math.max.apply(Math, c4exploded).toFixed(1);
      var c4explodedList = document.querySelectorAll("[data-c4exploded='"+maxC4exploded+"']");
      for (var i = 0; i < c4explodedList.length; i++) {
        c4explodedList[i].style.color = "green";
      }

      var c4defusedElements = document.querySelectorAll("[data-c4defused]");
      var c4defused = $.map(c4defusedElements, function(val, i) { return parseFloat(val.dataset.c4defused).toFixed(1); });
      var maxC4defused = Math.max.apply(Math, c4defused).toFixed(1);
      var c4defusedList = document.querySelectorAll("[data-c4defused='"+maxC4defused+"']");
      for (var i = 0; i < c4defusedList.length; i++) {
        c4defusedList[i].style.color = "green";
      }

      var ak47Elements = document.querySelectorAll("[data-ak47]");
      var ak47 = $.map(ak47Elements, function(val, i) { return parseFloat(val.dataset.ak47).toFixed(1); });
      var maxAk47 = Math.max.apply(Math, ak47).toFixed(1);
      var ak47List = document.querySelectorAll("[data-ak47='"+maxAk47+"']");
      for (var i = 0; i < ak47List.length; i++) {
        ak47List[i].style.color = "green";
      }

      var m4a1Elements = document.querySelectorAll("[data-m4a1]");
      var m4a1 = $.map(m4a1Elements, function(val, i) { return parseFloat(val.dataset.m4a1).toFixed(1); });
      var maxM4a1 = Math.max.apply(Math, m4a1).toFixed(1);
      var m4a1List = document.querySelectorAll("[data-m4a1='"+maxM4a1+"']");
      for (var i = 0; i < m4a1List.length; i++) {
        m4a1List[i].style.color = "green";
      }

      var augElements = document.querySelectorAll("[data-aug]");
      var aug = $.map(augElements, function(val, i) { return parseFloat(val.dataset.aug).toFixed(1); });
      var maxAug = Math.max.apply(Math, aug).toFixed(1);
      var augList = document.querySelectorAll("[data-aug='"+maxAug+"']");
      for (var i = 0; i < augList.length; i++) {
        augList[i].style.color = "green";
      }

      var ssg08Elements = document.querySelectorAll("[data-ssg08]");
      var ssg08 = $.map(ssg08Elements, function(val, i) { return parseFloat(val.dataset.ssg08).toFixed(1); });
      var maxSsg08 = Math.max.apply(Math, ssg08).toFixed(1);
      var ssg08List = document.querySelectorAll("[data-ssg08='"+maxSsg08+"']");
      for (var i = 0; i < ssg08List.length; i++) {
        ssg08List[i].style.color = "green";
      }

      var awpElements = document.querySelectorAll("[data-awp]");
      var awp = $.map(awpElements, function(val, i) { return parseFloat(val.dataset.awp).toFixed(1); });
      var maxAwp = Math.max.apply(Math, awp).toFixed(1);
      var awpList = document.querySelectorAll("[data-awp='"+maxAwp+"']");
      for (var i = 0; i < awpList.length; i++) {
        awpList[i].style.color = "green";
      }

      var tecosElements = document.querySelectorAll("[data-tecos]");
      var tecos = $.map(tecosElements, function(val, i) { return parseFloat(val.dataset.tecos).toFixed(1); });
      var maxTecos = Math.max.apply(Math, tecos).toFixed(1);
      var tecosList = document.querySelectorAll("[data-tecos='"+maxTecos+"']");
      for (var i = 0; i < tecosList.length; i++) {
        tecosList[i].style.color = "green";
      }

      var famasElements = document.querySelectorAll("[data-famas]");
      var famas = $.map(famasElements, function(val, i) { return parseFloat(val.dataset.famas).toFixed(1); });
      var maxFamas = Math.max.apply(Math, famas).toFixed(1);
      var famasList = document.querySelectorAll("[data-famas='"+maxFamas+"']");
      for (var i = 0; i < famasList.length; i++) {
        famasList[i].style.color = "green";
      }

      var galilElements = document.querySelectorAll("[data-galil]");
      var galil = $.map(galilElements, function(val, i) { return parseFloat(val.dataset.galil).toFixed(1); });
      var maxGalil = Math.max.apply(Math, galil).toFixed(1);
      var galilList = document.querySelectorAll("[data-galil='"+maxGalil+"']");
      for (var i = 0; i < galilList.length; i++) {
        galilList[i].style.color = "green";
      }

      var knifeElements = document.querySelectorAll("[data-knife]");
      var knife = $.map(knifeElements, function(val, i) { return parseFloat(val.dataset.knife).toFixed(1); });
      var maxKnife = Math.max.apply(Math, knife).toFixed(1);
      var knifeList = document.querySelectorAll("[data-knife='"+maxKnife+"']");
      for (var i = 0; i < knifeList.length; i++) {
        knifeList[i].style.color = "green";
      }

      var taserElements = document.querySelectorAll("[data-taser]");
      var taser = $.map(taserElements, function(val, i) { return parseFloat(val.dataset.taser).toFixed(1); });
      var maxTaser = Math.max.apply(Math, taser).toFixed(1);
      var taserList = document.querySelectorAll("[data-taser='"+maxTaser+"']");
      for (var i = 0; i < taserList.length; i++) {
        taserList[i].style.color = "green";
      }

      var pistolasElements = document.querySelectorAll("[data-pistolas]");
      var pistolas = $.map(pistolasElements, function(val, i) { return parseFloat(val.dataset.pistolas).toFixed(1); });
      var maxPistolas = Math.max.apply(Math, pistolas).toFixed(1);
      var pistolasList = document.querySelectorAll("[data-pistolas='"+maxPistolas+"']");
      for (var i = 0; i < pistolasList.length; i++) {
        pistolasList[i].style.color = "green";
      }

      var deagleElements = document.querySelectorAll("[data-deagle]");
      var deagle = $.map(deagleElements, function(val, i) { return parseFloat(val.dataset.deagle).toFixed(1); });
      var maxDeagle = Math.max.apply(Math, deagle).toFixed(1);
      var deagleList = document.querySelectorAll("[data-deagle='"+maxDeagle+"']");
      for (var i = 0; i < deagleList.length; i++) {
        deagleList[i].style.color = "green";
      }

      var submachinegunsElements = document.querySelectorAll("[data-submachineguns]");
      var submachineguns = $.map(submachinegunsElements, function(val, i) { return parseFloat(val.dataset.submachineguns).toFixed(1); });
      var maxSubmachineguns = Math.max.apply(Math, submachineguns).toFixed(1);
      var submachinegunsList = document.querySelectorAll("[data-submachineguns='"+maxSubmachineguns+"']");
      for (var i = 0; i < submachinegunsList.length; i++) {
        submachinegunsList[i].style.color = "green";
      }

      var outraspistolasElements = document.querySelectorAll("[data-outraspistolas]");
      var outraspistolas = $.map(outraspistolasElements, function(val, i) { return parseFloat(val.dataset.outraspistolas).toFixed(1); });
      var maxOutraspistolas = Math.max.apply(Math, outraspistolas).toFixed(1);
      var outraspistolasList = document.querySelectorAll("[data-outraspistolas='"+maxOutraspistolas+"']");
      for (var i = 0; i < outraspistolasList.length; i++) {
        outraspistolasList[i].style.color = "green";
      }

      var shotgunsElements = document.querySelectorAll("[data-shotguns]");
      var shotguns = $.map(shotgunsElements, function(val, i) { return parseFloat(val.dataset.shotguns).toFixed(1); });
      var maxShotguns = Math.max.apply(Math, shotguns).toFixed(1);
      var shotgunsList = document.querySelectorAll("[data-shotguns='"+maxShotguns+"']");
      for (var i = 0; i < shotgunsList.length; i++) {
        shotgunsList[i].style.color = "green";
      }

      var hegrenadeElements = document.querySelectorAll("[data-hegrenade]");
      var hegrenade = $.map(hegrenadeElements, function(val, i) { return parseFloat(val.dataset.hegrenade).toFixed(1); });
      var maxShotguns = Math.max.apply(Math, hegrenade).toFixed(1);
      var hegrenadeList = document.querySelectorAll("[data-hegrenade='"+maxShotguns+"']");
      for (var i = 0; i < hegrenadeList.length; i++) {
        hegrenadeList[i].style.color = "green";
      }

      var infernoElements = document.querySelectorAll("[data-inferno]");
      var inferno = $.map(infernoElements, function(val, i) { return parseFloat(val.dataset.inferno).toFixed(1); });
      var maxShotguns = Math.max.apply(Math, inferno).toFixed(1);
      var infernoList = document.querySelectorAll("[data-inferno='"+maxShotguns+"']");
      for (var i = 0; i < infernoList.length; i++) {
        infernoList[i].style.color = "green";
      }
    }
  });
</script>
